module.exports = function(target) {
    const substitutions = {
        'backbone': 'Backbone',
        'backbone.marionette': 'Marionette',
        'bluebird': 'Promise',
        'cheerio': '$',
        'ember': 'Ember',
        'handlebars': 'Handlebars',
        'highland': 'hl',
        'hogan.js': 'Hogan',
        'leaflet': 'L',
        'lodash': '_',
        'string': 'S',
        'jquery': '$',
        'jquery-ui': 'ui',
        'knockout': 'ko',
        'mustache': 'Mustache',
        'node-tap': 'test',
        'openlayers': 'ol',
        'pouchdb': 'PouchDB',
        'prova': 'test',
        'es6-promise': 'Promise',
        'raven-js': 'Raven',
        'native-promise-only': 'Promise',
        'node-uuid': 'uuid',
        'ractive': 'Ractive',
        'immutable': 'Immutable',
        'ramda': 'R',
        'react': 'React',
        'react-dom': 'ReactDOM',
        'react-addons-clone-with-props': 'cloneWithProps',
        'react-addons-create-fragment': 'createFragment',
        'react-addons-css-transition-group': 'CSSTransitionGroup',
        'react-addons-linked-state-mixin': 'LinkedStateMixin',
        'react-addons-pure-render-mixin': 'PureRenderMixin',
        'react-addons-shallow-compare': 'shallowCompare',
        'react-addons-transition-group': 'TransitionGroup',
        'react-addons-update': 'update',
        'roslib': 'ROS',
        'rsvp': 'RSVP',
        'underscore': '_',
        'socket.io': 'io',
        'superagent': 'request',
        'spine': 'Spine',
        'tap': 'test',
        'three': 'THREE',
        'q': 'Q',
        'qunit': 'QUnit',
        'zepto': '$',
        'graceful-fs': 'fs',
        'findup-sync': 'findup',
        'mime-types': 'mime',
        'gulp-util': 'gutil',
        'iconv-lite': 'iconv',
        'event-stream': 'es',
        'stream-line-wrapper': 'LineWrapper',
        'stream-to-array': 'streamToArray',
        'raw-body': 'getRawBody',
        'aws-sdk': 'AWS',
        'connect-dynamodb': 'DynamoDBStore',
        'connect-mysql': 'MySQLStore',
        'connect-sdb': 'SdbStore',
        'connect-sqlite3': 'SQLiteStore',
        'package.json': 'pkg',
        'tape': 'test',
        'sequelize': 'Sequelize',
        'r': 'rethinkdb',
        'underscore.string': 's',
    };

    return (target in substitutions) ? substitutions[target] : target;
};
